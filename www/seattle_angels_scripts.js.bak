var databaseURL   = "https://seattle-angels.firebaseio.com/";
var myFirebaseRef = new Firebase(databaseURL);

var companyBriefsHTML 		= "";
var entrepreneurBriefsHTML	= "";
var investorBriefsHTML		= "";
var companyDetailsHTML		= "";
var companyDetailDivTags	= {}
var outerNavigationHTML 	= "";
var messageFromJohnHTML		= ""
const USER_SEES_OUTER_NAVIGATION 	= 0
const USER_SEES_COMPANY_BRIEFS   	= 1
const USER_SEES_COMPANY_DETAILS  	= 2
const USER_SEES_ENTREPRENEUR_BRIEFS	= 3
const USER_SEES_INVESTOR_BRIEFS  	= 4
const USER_SEES_MESSAGE_FROM_JOHN	= 5
var whereAmI	= USER_SEES_MESSAGE_FROM_JOHN

function plainTextToHtml(toConvert)
{
	var calcS = toConvert;
	while (calcS.indexOf('\n') != -1)
		calcS = calcS.replace("\n","</div><div>");
	return "<div>" + calcS + "</div>"
}

function viewLessDetail()
{
	var whichPage
	switch (whereAmI)
	{
		case USER_SEES_COMPANY_BRIEFS: 		whereAmI = USER_SEES_OUTER_NAVIGATION; 	whichPage =  0; break;
		case USER_SEES_COMPANY_DETAILS: 	whereAmI = USER_SEES_COMPANY_BRIEFS;   	whichPage = -1; break;
		case USER_SEES_ENTREPRENEUR_BRIEFS: whereAmI = USER_SEES_OUTER_NAVIGATION;  whichPage =  1; break;
		case USER_SEES_INVESTOR_BRIEFS:		whereAmI = USER_SEES_OUTER_NAVIGATION;  whichPage =  2; break;
		case USER_SEES_OUTER_NAVIGATION: 	whereAmI = USER_SEES_MESSAGE_FROM_JOHN;	whichPage = -1; break;
		case USER_SEES_MESSAGE_FROM_JOHN:	whereAmI = USER_SEES_MESSAGE_FROM_JOHN; whichPage = -1; break;
	}
	displayPage(whichPage)
}

function viewMoreDetail(whichPage = -1)
{
	
	console.log("whichPage = " + whichPage + ", whereAmI = " + whereAmI)
	var calc;
	if (whichPage != -1 )										{console.log("L"); calc = whichPage}
	else if (document.getElementById('theswipelist') == null)	{console.log("M"); calc = 0}
	else														{console.log("N"); calc = document.getElementById('theswipelist').selected}
	switch (whereAmI)
	{
		case USER_SEES_COMPANY_BRIEFS: 		whereAmI = USER_SEES_COMPANY_DETAILS; 		break;
		case USER_SEES_COMPANY_DETAILS: 	whereAmI = USER_SEES_COMPANY_DETAILS;  		break;
		case USER_SEES_ENTREPRENEUR_BRIEFS: whereAmI = USER_SEES_ENTREPRENEUR_BRIEFS;  	break;
		case USER_SEES_INVESTOR_BRIEFS:		whereAmI = USER_SEES_INVESTOR_BRIEFS;  		break;
		case USER_SEES_MESSAGE_FROM_JOHN:	whereAmI = USER_SEES_OUTER_NAVIGATION; 		break;
		case USER_SEES_OUTER_NAVIGATION: 	
			switch (document.getElementById('theswipelist').selected)
			{
				case 0: whereAmI = USER_SEES_COMPANY_BRIEFS;		break;
				case 1:	whereAmI = USER_SEES_ENTREPRENEUR_BRIEFS;	break;
				case 2:	whereAmI = USER_SEES_INVESTOR_BRIEFS;		break;
			}
			break;
	}
	console.log("whichPage = " + whichPage + ", calc = " + calc + ", whereAmI = " + whereAmI)
	displayPage(calc)
}

function displayPage(whichPage = -1)
{
	var calc;
	var calcS;
	if (whichPage != -1) 										calc = whichPage
	else if (document.getElementById('theswipelist') == null)	calc = 0; 
	else														calc = document.getElementById('theswipelist').selected;

	switch(whereAmI)
	{
		case USER_SEES_COMPANY_DETAILS: 	calcS = companyDetailsHTML; 	break;
		case USER_SEES_COMPANY_BRIEFS: 		calcS = companyBriefsHTML;		break;
		case USER_SEES_OUTER_NAVIGATION: 	calcS = outerNavigationHTML;	break;
		case USER_SEES_ENTREPRENEUR_BRIEFS:	calcS = entrepreneurBriefsHTML; break;
		case USER_SEES_INVESTOR_BRIEFS:		calcS = investorBriefsHTML;		break;
		case USER_SEES_MESSAGE_FROM_JOHN:	calcS = messageFromJohnHTML;	break;
	}	
	document.getElementById('swipe_pages_div').innerHTML = calcS
	if (document.getElementById('theswipelist') != null)
		document.getElementById('theswipelist').setAttribute('selected', calc)
}

function sortOnOrder(toSort)
{
	var toSortCopy = {}
	var sortedCopy = []
	var field;
	for (field in toSort)
		toSortCopy[field] = toSort[field]
	
	for (field in toSortCopy)
	{
		if (! 'order' in toSortCopy[field])
		{
			delete toSortCopy[field]
			throw "ERROR: Could not find an 'order' subkey in '" + field + "' key!"
		}
		if (! 'content' in toSortCopy[field])
		{
			delete toSortCopy[field]
			throw "ERROR: Could not find a 'content' subkey in '" + field + "' key!"
	}	}
	
	var ii = 0
	while (Object.keys(toSortCopy).length > 0)
	{
		var orderToBeat = Number.MAX_VALUE
		var lowField = ""
		for (field in toSortCopy)
			if (toSortCopy[field]['order'] < orderToBeat)
			{
				orderToBeat = toSortCopy[field]['order']
				lowField = field
			}
		
		//because {lowField : toSortCopy[lowField]['content']} doesn't work. Javascript sure is a great language!		
		sortedCopy[ii] = {} 
		sortedCopy[ii][lowField] = toSortCopy[lowField]['content']

		delete toSortCopy[lowField]
		ii += 1
	}
	
	return sortedCopy
}

function createSwipePage(context, name, fromDatabase, entryCount, applicableCases)
{
	var field;
	var titlePane = "";
	var  leftPane = ""
	var rightPane = ""
	var calcS;			
	
	for (field in fromDatabase[name]) 
	{
//		console.log("name =" + name + ", field = " + field, "applicableCases = " + applicableCases)
		var foundField = false;
		console.log("one")
		for (var ii = 0; ii < applicableCases.length; ii += 1)
			if (applicableCases[ii] == field)
				foundField = true;
		console.log("two")
		if (! foundField)
			continue;
		calcS = context + field
		switch(calcS)
		{
			case 'CompaniesbriefHeadingCompany': case 'CompaniesdetailHeadingCompany':
				var sorted = sortOnOrder(fromDatabase[name][field])
				titlePane = "<div style=\"font-weight:bold;font-size:150%;\">" + name + "</div>"
				for (var ii = 0; ii < sorted.length; ii += 1)
				{
					for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries. 
						if (title != '<+Untitled+>')
							leftPane += "<div style=\"font-weight:bold;\">" + title 						+ "</div>"
					leftPane 	+= "<div>" 							   + plainTextToHtml(sorted[ii][title]) + "</div>"
				}	
				break;
				
			case 'CompaniesbriefBodyCompany': 
				var sorted = sortOnOrder(fromDatabase[name][field])
				titlePane = "<div style=\"font-weight:bold;font-size:150%;\">" + name + "</div>"
				for (var ii = 0; ii < sorted.length; ii += 1)
				{
					for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries.
						rightPane	+= "<div style=\"font-weight:bold;\">" + title + "</div>"
					rightPane	   	+= "<div>" 							  + plainTextToHtml(sorted[ii][title]) + "</div>"
				}
				break;
			case 'CompaniesdetailBodyCompany':
				var sorted = sortOnOrder(fromDatabase[name][field])
				titlePane = "<div style=\"font-weight:bold;font-size:150%;\">" + name + "</div>"
				companyDetailDivTags[name] = {}
				for (var ii = 0; ii < sorted.length; ii += 1)
					for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries.
					{
						rightPane +=	"<div>"																										+
											"<button  style=\"color:blue;\"" 		 																+
												     "onclick=\"displayDetailParagraph(&quot;" + name  								+ "&quot;,"		+
																					  "&quot;" + name + "_" + title + "detail_div"	+ "&quot;)\">" 	+
														title																						+
											"</button>"																								+
											"<div id=\"" + name + "_" + title + "detail_div" + "\" style=\"display:none;\">" 						+
												plainTextToHtml(sorted[ii][title])																	+
											 "</div>" 																								+
										"</div>";
						companyDetailDivTags[name][title] = name + "_" + title + "detail_div"
					}
				break;
			case 'Entrepreneursbrief': 
				titlePane = "<div style=\"font-weight:bold;font-size:150%;\">" + name + "</div>"
			case 'Investorsbrief':
				var sorted = sortOnOrder(fromDatabase[name][field])
				
				for (var ii = 0; ii < sorted.length; ii += 1)
				{

					for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries. 
					{
						if ((title != '<+Untitled+>') && (title != "headshot"))
							leftPane += "<div style=\"font-weight:bold;\">" + title + "</div>"
					}
					
					if (title == 'headshot')
					{
						if (sorted[ii][title].length > 0) 
						{
							//load an image into right pane
					}	}
					else 
						leftPane	+= "<div>" + plainTextToHtml(sorted[ii][title]) + "</div>"
				}
				break;	
			case 'Investorslist': //intentionally blank; does not create a swipe page
				return ""
			default: throw "Error: Did not recognize context/field combination!"
	}	}
	
	return 	"<swipe-page class=\"swipe\" id=\"" + name + "_swipe_page\">"  																						+
				"<div>"																																			+
					titlePane																																	+
					"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;background-color:grey;\"  id= \"leftPane\">"			+
						leftPane 																																+
					"</div>"																																	+
					"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"rightPane\">"								+	//float:left; ? and float:right?
						rightPane 																																+
					"</div>"																																	+
					"<div style=\"clear:both;\"></div>"																											+
			"</div></swipe-page>" 																																;	
	
}	

function createSwipePagesHTML(databaseReply)
{
	var calcS;
	var companySummaryHTML 				= ""
	var entrepreneurSummaryHTML			= ""
	var investorSummaryHTML				= ""
	outerNavigationHTML 				= ""
	companyDetailDivTags				= {}
	var entryCount;
	var name;
	var currentlySelectedSwipePage;

	calcS = ""; entryCount = -1;
	console.log("four")
	for (name in databaseReply.val()['Companies'])
	{
		console.log("three")
		entryCount += 1
		calcS += createSwipePage('Companies', name, databaseReply.val()['Companies'], entryCount, ['detailHeadingCompany', 'detailBodyCompany'])
		companySummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"viewMoreDetail(" + entryCount + ")\">" + name + "</button></div>"
	}
	companyDetailsHTML 	= 	"<swipe-pages id=\"theswipelist\" transitionDuration=\"0.3\">" + calcS + "</swipe-pages>"
	
	calcS = ""; entryCount = -1;
	for (name in databaseReply.val()['Companies'])
	{
		entryCount += 1
		calcS += createSwipePage('Companies', name, databaseReply.val()['Companies'], entryCount, ['briefHeadingCompany', 'briefBodyCompany'])
	}
	companyBriefsHTML 	= 	"<swipe-pages id=\"theswipelist\" transitionDuration=\"0.3\">" + calcS + "</swipe-pages>"
	
	calcS = ""; entryCount = -1;
	for (name in databaseReply.val()['Entrepreneurs'])
	{
		entryCount += 1
		entrepreneurSummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"viewMoreDetail(" + entryCount + ")\">" + name + "</button></div>"
		calcS += createSwipePage('Entrepreneurs', name, databaseReply.val()['Entrepreneurs'], entryCount, ['brief'])
	}
	entrepreneurBriefsHTML 	= 	"<swipe-pages id=\"theswipelist\" transitionDuration=\"0.3\">" 	+ calcS + "</swipe-pages>"
	
	calcS = ""; entryCount = -1;
	for (name in databaseReply.val()['Investors'])
	{
		var calcS2
		entryCount += 1
		calcS2 = createSwipePage('Investors', name, databaseReply.val()['Investors'], entryCount, ['brief', 'list'])
		calcS += calcS2
		if (calcS2.length == 0)    {investorSummaryHTML +=	"<div>" + name + "</div>"; entryCount -=1;}
		else						investorSummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"viewMoreDetail(" + entryCount + ")\">" + name + "</button></div>"
	}
	investorBriefsHTML 	= 	"<swipe-pages id=\"theswipelist\" transitionDuration=\"0.3\">" + calcS + "</swipe-pages>"
//------------------------------------------------

	if (document.getElementById('theswipelist') != null)	currentlySelectedSwipePage = document.getElementById('theswipelist').selected
	else 													currentlySelectedSwipePage = 0
	
	outerNavigationHTML		= 	"<swipe-pages id=\"theswipelist\" selected=\"" + 0 + "\" transitionDuration=\"0.3\">"	+
									"<swipe-page class=\"swipe\">" 														+ 
										"<div style=\"font-weight:bold;\">Companies</div>"								+ 
										companySummaryHTML 																+ 
									"</swipe-page>"																		+
									"<swipe-page class=\"swipe\">" 														+ 
										"<div style=\"font-weight:bold;\">Entrepreneurs</div>"							+
										entrepreneurSummaryHTML 														+ 
									"</swipe-page>"																		+
									"<swipe-page class=\"swipe\">" 														+ 
										"<div style=\"font-weight:bold;\">Investors</div>"								+
										investorSummaryHTML	 															+ 
									"</swipe-page>"																		+
								"</swipe-pages>"
								
	messageFromJohnHTML		= databaseReply.val()['MessageFromJohn']
	
	displayPage();	
	
}


function displayDetailParagraph(company, divTagOfInterest)
{
	console.log(divTagOfInterest)
	var calcO = document.getElementById(divTagOfInterest).style
	
	if (calcO['display'] == 'inline')
		calcO['display'] = 'none' //JET the user is turning off this block of text
		
	else
	{
		for (divTag in companyDetailDivTags[company])
		{
			calcO = document.getElementById(companyDetailDivTags[company][divTag]).style
			calcO['display'] = 'none';
			
		}	
		calcO = document.getElementById(divTagOfInterest).style
		calcO['display'] = 'inline';
	}
	//JET strange voodoo required by swipe-pages in order to display content that changes out from under you
	document.getElementById('theswipelist').refresh()
}

function initialize()
{
	document.body.innerHTML = loadPage("display_window.html");
	//JET do I need to be listening for other event types? I want to know if _anything_ changes. Do I need to be listening to each event individually?
	myFirebaseRef.child("/").on("value", createSwipePagesHTML); 
}

//http://stackoverflow.com/questions/18930361/how-to-load-another-html-file-using-js
function loadPage(href)
{
	var xmlhttp = new XMLHttpRequest();
    xmlhttp.open("GET", href, false); //JET some debuggers claim calling this .open asychonously (with a "false" value) is bad for performance? (shrug)
    xmlhttp.send();
 	return xmlhttp.responseText;
}

/*
function createSwipePagesHTML(databaseReply)
{
	var companyEntryFromDatabase 		= databaseReply.val()['Companies']
	var entrepreneurEntryFromDatabase	= databaseReply.val()['Entrepreneur']
	var investorEntryFromDatabase		= databaseReply.val()['Investor']
	var companyDetailsPagesHTML  		= ""
	var companyBriefPagesHTML  			= ""
	var entrepreneurBriefPagesHTML		= ""
	var investorBriefPagesHTML			= ""
	var companySummaryHTML 				= ""
	var entrepreneurSummaryHTML			= ""
	var investorSummaryHTML				= ""
	var companyName;
	var entrepreneurName;
	var investorName;
	outerNavigationHTML 				= ""
	companyDetailDivTags				= {}
	
	
	var entryCount	 					= -1;
	for (companyName in companyEntryFromDatabase)
	{
		entryCount += 1;
		var field;
		var wrapper0  = {}
		var wrapper1  = {}
		var wrapper2  = {}
		var  leftPane = {}
		var rightPane = {}
		
		wrapper0['detail'] =	"<swipe-page class=\"swipe\" id=\"" + companyName + "_swipe_page\">"  																					+
									"<div>"																																				+
										"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;background-color:grey;\"  id= \"leftPane\">"				;
		wrapper1['detail'] =			"</div>"																																		+
										"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"rightPane\">"									;	//float:left; ? and float:right?
		wrapper2['detail'] = 			"</div>"																																		+
										"<div style=\"clear:both;\"></div>"																												+
								"</div></swipe-page>" 																																	;	
		leftPane['detail'] = ""
		rightPane['detail']= ""

		wrapper0['brief'] =	"<swipe-page class=\"swipe\" id=\"" + companyName + "_swipe_page\">"  																						+
									"<div>"																																				+
										"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;background-color:grey;\"  id= \"leftPane\">"				;
		wrapper1['brief'] =			"</div>"																																			+
										"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"rightPane\">"									;	//float:left; ? and float:right?
		wrapper2['brief'] = 			"</div>"																																		+
										"<div style=\"clear:both;\"></div>"																												+
								"</div></swipe-page>" 																																	;	
		leftPane['brief'] = "";
		rightPane['brief']= "";
		
		companySummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"displayPage(" + entryCount + ")\">" + companyName + "</button></div>"
		
		for (field in companyEntryFromDatabase[companyName]) 
		{
			switch(field)
			{
				case 'detail' : case 'brief':
					var sorted = sortOnOrder(companyEntryFromDatabase[companyName][field])
					for (var ii = 0; ii < sorted.length; ii += 1)
					{
						for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries. 
							if (title != '<+Untitled+>')
								leftPane[field] += "<div style=\"font-weight:bold;\">" + title 							+ "</div>"
						leftPane[field] 	+= "<div>" 							   + plainTextToHtml(sorted[ii][title]) + "</div>"
					}	
					break;
				case 'detailCollapsible':
					var sorted = sortOnOrder(companyEntryFromDatabase[companyName][field])
					companyDetailDivTags[companyName] = {}
					for (var ii = 0; ii < sorted.length; ii += 1)
						for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries.
						{
							rightPane['detail'] +=	"<div>"																										+
														"<button  style=\"color:blue;\"" 		 																+
															   "onclick=\"displayDetailParagraph(&quot;" + companyName  							+ "&quot;,"		+
																							    "&quot;" + companyName + "_" + title + "detail_div"	+ "&quot;)\">" 	+ 
															title																								+
														"</button>"																								+
														"<div id=\"" + companyName + "_" + title + "detail_div" + "\" style=\"display:none;\">" 						+
												 			plainTextToHtml(sorted[ii][title])															+
												 		"</div>" 																								+
													"</div>";
							companyDetailDivTags[companyName][title]				= companyName + "_" + title + "detail_div"
						}
					break;

					
				case 'briefCollapsible': 
					var sorted = sortOnOrder(companyEntryFromDatabase[companyName][field])
					for (var ii = 0; ii < sorted.length; ii += 1)
					{
						for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries.
							rightPane['brief'] += "<div style=\"font-weight:bold;\">" + title + "</div>"
						rightPane['brief']	   += "<div>" 							  + plainTextToHtml(sorted[ii][title]) + "</div>"
					}
					
				break;
				default: 
					throw "Error: did not recognize " + field + " tag in firebase. Is this tag supported?"
		}	}	
		companyDetailsPagesHTML += wrapper0['detail'] + leftPane['detail'] + wrapper1['detail'] + rightPane['detail'] + wrapper2['detail'];
		companyBriefPagesHTML	 += wrapper0['brief']  + leftPane['brief']  + wrapper1['brief']  + rightPane['brief']  + wrapper2['brief'];
	}	

	entryCount = -1

	for (entrepreneurName in entrepreneurEntryFromDatabase)
	{
		var field;
		var wrapper0  = ""
		var wrapper1  = ""
		var wrapper2  = ""
		var  leftPane = ""
		var rightPane = ""
		
		wrapper0 =	"<swipe-page class=\"swipe\" id=\"" + entrepreneurName + "_swipe_page\">"  																						+
						"<div>"																												+
							"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"leftPane\">"	;
		wrapper1 =			"</div>"																										+
							"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"rightPane\">"	;	//float:left; ? and float:right?
		wrapper2 = 			"</div>"																										+
							"<div style=\"clear:both;\"></div>"																				+
					"</div></swipe-page>" 																									;	
		leftPane = "";
		rightPane= "";
		entryCount += 1
		entrepreneurSummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"displayPage(" + entryCount + ")\">" + entrepreneurName + "</button></div>"
		
		
		for (field in entrepreneurEntryFromDatabase[investorName]) 
		{
			switch(field)
			{
				
		}	}
		entrepreneurBriefPagesHTML += wrapper0 + leftPane + wrapper1 + rightPane + wrapper2
	}
	
		entryCount = -1

	for (investorName in investorEntryFromDatabase)
	{
		var field;
		var wrapper0  = ""
		var wrapper1  = ""
		var wrapper2  = ""
		var  leftPane = ""
		var rightPane = ""
		
		wrapper0 =	"<swipe-page class=\"swipe\" id=\"" + entrepreneurName + "_swipe_page\">"  												+
						"<div>"																												+
							"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"leftPane\">"	;
		wrapper1 =			"</div>"																										+
							"<div style=\"width:45%;min-width:300px;margin:0px;padding:3px;box-sizing:content-box;\"  id= \"rightPane\">"	;	//float:left; ? and float:right?
		wrapper2 = 			"</div>"																										+
							"<div style=\"clear:both;\"></div>"																				+
					"</div></swipe-page>" 																									;	
		leftPane = "";
		rightPane= "";
		entryCount += 1
		investorSummaryHTML +=	"<div><button  style=\"color:blue;\"onclick=\"displayPage(" + entryCount + ")\">" + entrepreneurName + "</button></div>"
		
		
		for (field in investorEntryFromDatabase[investorName]) 
		{
			switch(field)
			{
				case 'brief':
					var sorted = sortOnOrder(investorEntryFromDatabase[investorName][field])
					for (var ii = 0; ii < sorted.length; ii += 1)
					{
						for (title in sorted[ii]) //JET This for loop executes exactly once. After sorting, the data is an array of 1-entry dictionaries. 
						{
							if ((title != '<+Untitled+>') && (title != "headshot"))
								leftPane[field] += "<div style=\"font-weight:bold;\">" + title 							+ "</div>"
						}
						if (title == 'headshot')
						{
							if (sorted[ii][title].length > 0) 
							{
								//load an image into right pane
						}	}
						else 
							leftPane[field] 	+= "<div>" 							   + plainTextToHtml(sorted[ii][title]) + "</div>"
					}
					break;
		}	}
		investorBriefPagesHTML += wrapper0 + leftPane + wrapper1 + rightPane + wrapper2
	}
	
	
	var currentlySelectedSwipePage;
	if (document.getElementById('theswipelist') != null)	currentlySelectedSwipePage = document.getElementById('theswipelist').getAttribute('selected')
	else 													currentlySelectedSwipePage = 0
	
	companyDetailsHTML 	= "<swipe-pages id=\"theswipelist\" selected=\"" + currentlySelectedSwipePage + "\" transitionDuration=\"0.3\">"	+
																detailsPagesHTML						+
                    										"</swipe-pages>"
	companyBriefsHTML		= "<swipe-pages id=\"theswipelist\" selected=\"" + currentlySelectedSwipePage + "\" transitionDuration=\"0.3\">"	+
																briefPagesHTML						  +
                    										"</swipe-pages>"
                    										
	entrepreneurBriefsHTML 	= "<swipe-pages id=\"theswipelist\" selected=\"" + 0 + "\" transitionDuration=\"0.3\">"	+
																entrepreneurBriefPagesHTML						  +
                    										"</swipe-pages>"
	investorBriefsHTML		= "<swipe-pages id=\"theswipelist\" selected=\"" + 0 + "\" transitionDuration=\"0.3\">"	+
																investorBriefPagesHTML						  +
                    										"</swipe-pages>"
                    										
	outerNavigationHTML		= 	"<swipe-pages id=\"theswipelist\" selected=\"" + 0 + "\" transitionDuration=\"0.3\">"	+
									"<swipe-page class=\"swipe\">" + companySummaryHTML 		+ "</swipe-page>"
									"<swipe-page class=\"swipe\">" + entrepreneurSummaryHTML 	+ "</swipe-page>"
									"<swipe-page class=\"swipe\">" + investorSummaryHTML	 	+ "</swipe-page>"
								"</swipe-pages>"
								
	messageFromJohnHTML		= databaseReply.val()['MessageFromJohn']
	
	displayPage();	
}

*/